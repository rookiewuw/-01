#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include<stack> 
using namespace std;
stack<int>cnt;
int ca[5000];
int ans1 = 0,ans2 = 0;
struct keylist{
	const char *word;
	int count;
}key[]={
	"auto", 0,
	"break", 0,
	"case", 0,
	"char", 0,
	"const", 0,
	"continue", 0,
	"default", 0,
	"do", 0,
	"double", 0,
	"else", 0,
	"enum", 0,
	"extern", 0,
	"float", 0,
	"for", 0,
	"goto" ,0,
	"if", 0,
	"int", 0,
	"long", 0,
	"register", 0,
	"return", 0,
	"short", 0,
	"signed", 0,
	"sizeof", 0,
	"static", 0,
	"struct", 0,
	"switch", 0,
	"typedef", 0,
	"union", 0,
	"unsigned", 0,
	"void", 0,
	"volatile", 0,
	"while", 0,	
	}; 
int find (string word){
  	int x=0;
	for(int i = 0;i < 32; i++){
		if(key[i].word == word){
			key[i].count++;
			x = i;
			break;
		}
	}
	return x;
}
void openfile(char file_name[500],int level){
	FILE *fp;
	char a;
	string str;
	int num;

	fp=fopen(file_name,"r");
	if(fp == NULL){
		cout<< "file cannot open!"<<endl;
	}
	a = fgetc(fp);
	while(a != EOF){
		if(a == '#'){
			while(a!='>'){
				a = fgetc(fp);
				if(a == '\n')break;
			}	
		}
		else if(a == '"'){
			a= fgetc(fp);
			while(a!='"'){
				a=fgetc(fp);
			}
			a=fgetc(fp);
		}
		else if(a == '\''){
			a= fgetc(fp);
			while(a!='\''){
				a=fgetc(fp);
			}
			a=fgetc(fp);
		}
		else if(a == '/'){
			a= fgetc(fp);
			if(a!='/'){
				while(a!='\n')
				a=fgetc(fp);
			}
			if(a == '*'){
				while(a != '/')
				a = fgetc(fp);
			}
		}
		else if(isalpha(a)){//判断单词 
	    	string temp;
	    	
	    	while(isalpha(a)){
	    		temp += a;
	    		a=fgetc(fp);
			}
				num = find(temp);
		}
		
		if(level>=2){
			if(key[25].count != 0){
				if(num == 2)
				ca[key[25].count-1]++;
			}//计算case 
			if(num == 15){
				cnt.push(1);
			}
			if(num == 9){
				int index=0;
				while(a == ' '||a =='\n'){
					a=fgetc(fp);
				}
				if(a=='i'){
					if((a=fgetc(fp))=='f'){
						if(!cnt.empty() &&(cnt.top()!=3)){
							cnt.push(3);
							key[15].count++;
							index=1;
						}
					}
					if(index==0){
						if(!cnt.empty()&&(cnt.top()==1)){
							ans1++;
							cnt.pop();
						}
						else if(!cnt.empty() && (cnt.top()==3)){
							cnt.pop();
							if(!cnt.empty()&&(cnt.top()==1)){
								ans2++;
								cnt.pop();
							}
						}
					}
				}
			}
		}
		else {
			a = fgetc(fp);
		}	
	}
	fclose(fp);
} 

int main()
{
    char file_name[500];
    int level;
    scanf("%s",file_name);
    cin >> level;
    openfile(file_name,level);
    if(level == 1){
    	int ans=0;
    for(int i = 0;i < 32;i++){
    	//cout<<key[i].word<<key[i].count<<endl;
    	ans+=key[i].count;
	}
	cout<<"total num: "<<ans<<endl;
	}
	else if(level == 2){
		int ans=0;
    	for(int i = 0;i < 32;i++){
    		ans+=key[i].count;
			}
		cout<<"total num: "<<ans<<endl;
		cout<<"switch num: "<<key[25].count<<endl;
		cout<<"case num: ";
		for(int i = 0;i<key[25].count;i++){
			cout<<ca[i]<<" ";
		}
	}
	else if	(level==3){
		int ans=0;
    	for(int i = 0;i < 32;i++){
    		ans+=key[i].count;
			}
		cout<<"total num: "<<ans<<endl;
		cout<<"switch num: "<<key[25].count<<endl;
		cout<<"case num: ";
		for(int i = 0;i<key[25].count;i++){
			cout<<ca[i]<<" ";
		}
		cout<<"if-else num: "<<ans1<<endl;
	}
	else if(level == 4){
			int ans=0;
    	for(int i = 0;i < 32;i++){
    		ans+=key[i].count;
			}
		cout<<"total num: "<<ans<<endl;
		cout<<"switch num: "<<key[25].count<<endl;
		cout<<"case num: ";
		for(int i = 0;i<key[25].count;i++){
			cout<<ca[i]<<" ";
		}
		cout<<endl;
		cout<<"if-else num: "<<ans1<<endl;
		cout<<"if-elseif-else num: "<<ans2<<endl;
	}
    return 0;
}
